

Dependencies:
1. c++14 compiler gcc > 5.0
2. boost 1.65
3. google protobuf ( automated framework to generate classes and objects which can be serialized and deserialized and send across network )
	More efficient than JSON.
   https://github.com/google/protobuf
   
   metadata/machine.proto contains the class structure and then .h and .cc are generated by running:
   cmd : protoc -I=. --cpp_out=. machine.proto
   
4. Object persistence with ODB ( https://www.codesynthesis.com/products/odb/doc/manual.xhtml ) 
   With this ORM ( Object relational mapping , DB can be switched any time )
   I'm using pgsql alond with obd.
   ODB installation link : https://www.codesynthesis.com/products/odb/download.xhtml
   Required:
   a. libodb-pgsql-2.4.0
   b. odb compiler odb-2.4.0
   
5. Email notification sent using postfix via boost API
6. spdlog logger used for logging client/server application logs.( https://github.com/gabime/spdlog )
7. code change : https://github.com/sreeraj-krishnan/client-server-db
8. to configure DB , find the sql file inside metadata folder, run it using , default user postgres can be used.

	psql -d mydb -f machine_info.sql
	
	this sqlfile is generated by running :
	odb --std c++11 -d pgsql --generate-query --generate-schema machine_info.hxx
	
	metadata/machine_info.hxx -> contains the class structure which will be persisted to DB.
	
9. config/context.json files withing client and server folder should be changed to configure server ip/port , email-server configuration, db configuration and application logging.

10. To run client and server, do a make on respective folders, then run ./server and ./client.
     Make sure to configure config/context.json and server, client configurations.
	


