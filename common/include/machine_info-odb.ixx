// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

namespace odb
{
  // machineinfo
  //

  inline
  access::object_traits< ::machineinfo >::id_type
  access::object_traits< ::machineinfo >::
  id (const object_type& o)
  {
    return o.id_;
  }

  inline
  void access::object_traits< ::machineinfo >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::machineinfo >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }
}

namespace odb
{
  // Memory
  //

  inline
  bool access::composite_value_traits< ::Memory, id_pgsql >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.mem_total_null;
    r = r && i.mem_available_null;
    r = r && i.mem_free_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::Memory, id_pgsql >::
  set_null (image_type& i,
            pgsql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace pgsql;

    i.mem_total_null = true;
    i.mem_available_null = true;
    i.mem_free_null = true;
  }

  // CPU
  //

  inline
  bool access::composite_value_traits< ::CPU, id_pgsql >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.idle_time_null;
    r = r && i.use_time_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::CPU, id_pgsql >::
  set_null (image_type& i,
            pgsql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace pgsql;

    i.idle_time_null = true;
    i.use_time_null = true;
  }

  // Process
  //

  inline
  bool access::composite_value_traits< ::Process, id_pgsql >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.total_null;
    r = r && i.running_null;
    r = r && i.blocked_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::Process, id_pgsql >::
  set_null (image_type& i,
            pgsql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace pgsql;

    i.total_null = true;
    i.running_null = true;
    i.blocked_null = true;
  }

  // SystemInfo
  //

  inline
  bool access::composite_value_traits< ::SystemInfo, id_pgsql >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.system_ip_null;
    r = r && i.system_name_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::SystemInfo, id_pgsql >::
  set_null (image_type& i,
            pgsql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace pgsql;

    i.system_ip_null = true;
    i.system_name_null = true;
  }

  // machineinfo
  //

  inline
  void access::object_traits_impl< ::machineinfo, id_pgsql >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::machineinfo, id_pgsql >::
  load_ (statements_type& sts,
         object_type& obj,
         bool)
  {
    ODB_POTENTIALLY_UNUSED (sts);
    ODB_POTENTIALLY_UNUSED (obj);
  }
}

